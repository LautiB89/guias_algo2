## Avanzar Turno de casa
casas(avanzarTurno(s, cs)) ≡ agregarNuevos(cs, subirNiveles(casas(s)))

agregarNuevos(new, old) ≡ 
	Sea c = dameUno(claves(new))
	Sea casa = 0

	if ¬∅?(claves(new)) then
		if obtener(c, new) =obs casa then
			definir(c, 1, agregarNuevos(borrar(c, new), old))
		else
			agregarNuevos(borrar(c, new), old)
		fi
	else old

subirNiveles(d) ≡
	Sea c = dameUno(claves(d))
	if ¬∅?(claves(d)) then
		definir(c, obtener(c, d) + 1, subirNiveles(borrar(c, d)))
	else d

---------------------------------------------------------------------------------------
####θθ##θ###ω###∑#### elMejorGrupoDeLosUltimos50Años ############σ#######################
---------------------------------------------------------------------------------------



Pre:
construcciones que se pisan no son ambas de nivel maximo
rios no pisan construcciones

casas(unir(s, s')) ≡ unirCasas(claves(casas(s2)), s1, s2)

unirCasas(c2, s ,s2) ≡ 
	if vacio(c2) then 
		casas(s) 
	else 
		if def?(dameUno(c2), casas(s)) ∨ def?(dameUno(c2), comercios(s)) then
			unirCasas(sinUno(c2),s,s2)
		else
			definir(
				dameUno(c2),
				obtener(dameUno(c2),casas(s2)),
				unirCasas(sinUno(c2),s,s2)
			)
		fi
	fi



comercios(unir(s1, s2)) ≡ corregirNiveles(unirComercios(claves(comercios(s2)), s1, s2), casas(unir(s1, s2)))

unirComercios(c2, s ,s2) ≡ 
	if vacio(c2) then 
		comercios(s)
	else 
		if def?(dameUno(c2), casas(s)) ∨ def?(dameUno(c2), comercios(s)) then
			unirComercios(sinUno(c2),s,s2)
		else
			definir(
				dameUno(c2),
				obtener(dameUno(c2),comercios(s2)),
				unirComercios(sinUno(c2),s,s2)
			)
		fi
	fi


corregirNivelesComercios: diccCom x diccCasas → diccCom
corregirNivelesComercios(dCom, dCasas) ≡ 
	Sea c = dameUno(claves(dCom))
	if ∅?(claves(dCom)) then
		dCom
	else
		definir(
			c,
			max(obtener(c, dCom), nivelZona(c, dCasas)),
			corregirNivelesComercios(borrar(c, dCom), dCasas)
		)
	fi


nivelZona: Pos × diccCasas → nat
nivelZona(p, dc) ≡ 
	nivelZonaAux(filtarManhattan(p, dc))


nivelZonaAux: diccCasas → nat
nivelZonaAux(dc) ≡ 
	sea c = dameUno(claves(dc))
	if ∅?(claves(dc)) then
		0
	else
		max(obtener(c, dc), nivelZonaAux(borrar(c, dc)))
	fi


filtarManhattan: Pos × diccCasas → diccCasas
filtarManhattan(p, dc) ≡
	sea c = dameUno(claves(dc))
	if ∅?(claves(dc)) then
		dc
	else
		if manhattan(p, c) =obs 3 then
			definir(c, obtener(c, dc), filtarManhattan(p, borrar(c, dc)))
		else
			filtarManhattan(p, borrar(c, dc))
	fi

manhatan: Pos × Pos → nat
manhattan(p1, p2) ≡ |p1.x - p2.x| + |p1.y - p2.y|


|---------------------------------------------------------------------------------------|
|####θθ##θ###ω###∑#### elMejorGrupoDeLosUltimos50Años ############σ#####################|
|---------------------------------------------------------------------------------------|

comercios(avanzarTurno(s, cs)) ≡ nuevosComercios(s, cs, subirNiveles(comercios(s)))

nuevosComercios(sim, new, old) ≡ 
	Sea c = dameUno(claves(new))
	Sea comercio = 0

	if ¬∅?(claves(new)) then
		if obtener(c, new) =obs comercio then
			definir(c, nivelZona(c, casas(s)), nuevosComercios(s, borrar(c, new), old))
		else
			agregarNuevos(s, borrar(c, new), old)
		fi
	else old fi

subirNiveles(d) ≡
	Sea c = dameUno(claves(d))
	if ¬∅?(claves(d)) then
		definir(c, obtener(c, d) + 1, subirNiveles(borrar(c, d)))
	else d



###### Medio dudoso #####################################################################
popularidad(iniciar()) ≡ 0
popularidad(avanzarTurno(s, cs)) ≡ popularidad(s)
popularidad(unir(s, s')) ≡ 1 + popularidad(s)

esModificable(iniciar()) ≡ true
esModificable(avanzarTurno(s, cs)) ≡ true //xq es la pre de avanzarTurno y avanzarturno no cambia esa cond
esModificable(unir(s, s')) ≡ false




