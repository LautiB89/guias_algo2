Suponga que se tiene un método potencia que, dada un matriz cuadrada A de orden 4 × 4 y un número n,
computa la matriz Aⁿ . 
Dada una matriz cuadrada A de orden 4 × 4 y un número natural n que es potencia de 2
(i.e., n = 2 k para algun k ≥ 1), desarrollar, utilizando la técnica de dividir y conquistar y 
el método potencia, un algoritmo que permita calcular
A¹ + A² + A³ + A⁴ . . . + Aⁿ .
Calcule el número de veces que el algoritmo propuesto aplica el método potencia. 
Si no es estrictamente menor que O(n), resuelva el ejercicio nuevamente.

∑Aⁱ	= 
A + A² + A³ + //O(n)
A + A * (A + A²+ A³ + ... + A^{n-1})

sumaPots(in A: matriz(nat), in n: nat) → R: matriz(nat)
	if n = 1 then
		return A
	else
		R ← A + A * sumaPots(A, n-1)
		return R

Nunca hacemos una potencia, #veces que aplicamos el metodo potencia es O(1)