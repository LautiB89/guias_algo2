matriz(α) es arreglo(arreglo(α))
pos es ⟨i: nat, j: nat⟩
dificil(in n: nat, in B: pos) → M: matriz(nat)
	matriz(nat) M ← CrearMatriz(n, n) //O(n²)
	dificilAux(M, 1,n, 1,n, 0, 1, B)


i0, i1 y j0, j1 son los limites de la matriz del subproblema
b es el valor que vamos a querer definir en B
o es el valor a partir del que se empiezan a enumerar las "L" del subproblema

dificilAux(in/out M: matriz(nat), in i0, i1, j0, j1, b, o: nat, in B: pos) →
	
	if n = 2 then
		for i ← i0..i1:
			for j ← j0..j1:
				M[i][j] = ( (⟨i, j⟩ = B) ? b : o)
			end for
		end for
	else
		n ← (i1-i0+1) //Dimensiones de la matriz
		m ← ((n/2)² - 1) / 3 //cantidad de "L"s en cada subproblema 

		for i ← 0 to 1
			for j ← 0 to 1
				iDesde ← 1 + (n*i)/2, iHasta ← (n*2ⁱ)/2
				jDesde ← 1 + (n*j)/2, jHasta ← (n*2ʲ)/2

				//elijo donde va el b del subproblema
				//y que valor debería ir ahí
				if iDesde ≤ Bᵢ ≤ iHasta ∧ jDesde ≤ Bⱼ ≤ jHasta then
					P ← B, V ← b
				else
					P ← ⟨i: (n/2)+i, j: (n/2)+j⟩, V ← m+1
				fi

				c ← i*2ⁱ+j //Calculo el numero de cuadrante usando i y j
				dificilAux(M, iDesde,iHasta, jDesde,jHasta, V, o+m*c, P)
			end for
		end for

